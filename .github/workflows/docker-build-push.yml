name: CI Workflow

on:
  push:
    branches:
      - main
      - server
      - bot

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to custom Docker registry
        run: echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login -u ${{ vars.DOCKER_REGISTRY_USERNAME }} --password-stdin registry.baidubce.com

      # - name: Build pipenv and push Docker image
      #   run: |
      #     docker build -t registry.baidubce.com/miss-journey/pipenv:latest ./dockerfiles/pipenv
      #     docker push registry.baidubce.com/miss-journey/pipenv:latest
      - name: Build and push Docker image
        run: |
          docker build -t registry.baidubce.com/miss-journey/journey:latest -f ./dockerfiles/journey/Dockerfile  .
          docker push registry.baidubce.com/miss-journey/journey:latest
  deploy-bot:
    # needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/bot'
    steps:
      - name: SSH into bot server and deploy bot 0
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.BOT_0_SERVER_HOST }}
          username: root
          password: ${{ secrets.BOT_0_SERVER_PASSWORD }}
          script: |
            cd ~/bot
            echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login -u ${{ vars.DOCKER_REGISTRY_USERNAME }} --password-stdin registry.baidubce.com
            docker pull registry.baidubce.com/miss-journey/journey:latest     
            docker stop journey-bot || true && docker rm journey-bot || true
            docker run  -d --name journey-bot --env-file .env  --net=host registry.baidubce.com/miss-journey/journey:latest python ./bot-v2.py
  deploy-server:
    # needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/server'
    steps:     
      - name: SSH into server and deploy server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.API_SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.API_SERVER_KEY }}
          script: |
            echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} |sudo docker login -u ${{ vars.DOCKER_REGISTRY_USERNAME }} --password-stdin registry.baidubce.com
            sudo docker pull registry.baidubce.com/miss-journey/journey:latest
            cd /home/ubuntu/docker
            sudo docker-compose stop app
            sudo docker-compose up -d --force-recreate --no-deps --build app
                              